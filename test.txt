============================= test session starts =============================
platform win32 -- Python 3.5.1, pytest-2.8.1, py-1.4.30, pluggy-0.3.1
rootdir: D:\git\cbr-db, inifile: 
plugins: cov-2.2.0
collected 49 items / 1 errors

test.txt s
tests\test_bankform.py ..
tests\test_cli_dates.py ..EE
tests\test_commands.py E
tests\test_conn.py ..
tests\test_database.py E
tests\test_download.py EE
tests\test_filesystem.py ...
tests\test_make_url.py ...
tests\test_select_regn.py FFFF
tests\test_unpack.py EEE
tests\test_utils_dates.py .................EEEEEE

=================================== ERRORS ====================================
 ERROR collecting issues/test_file_selection_(was_stream_src)/test_dbf_stream.py 
C:\Users\Евгений\Anaconda3\lib\site-packages\py\_path\local.py:650: in pyimport
    __import__(modname)
<frozen importlib._bootstrap>:969: in _find_and_load
    ???
<frozen importlib._bootstrap>:958: in _find_and_load_unlocked
    ???
<frozen importlib._bootstrap>:664: in _load_unlocked
    ???
<frozen importlib._bootstrap>:634: in _load_backward_compatible
    ???
C:\Users\Евгений\Anaconda3\lib\site-packages\_pytest\assertion\rewrite.py:171: in load_module
    py.builtin.exec_(co, mod.__dict__)
D:\git\cbr-db\stream_src\test_dbf_stream.py:11: in <module>
    ???
E   SystemError: Parent module '' not loaded, cannot perform relative import
 ERROR at setup of test_get_date_endpoints[today0-args0-start_date0-end_date0] 
file D:\git\cbr-db\tests\test_cli_dates.py, line 90
  @pytest.mark.parametrize('today,args,start_date,end_date', [
      (date(2015, 5, 15), {
          '<form>': '101',
          '--all-dates': True,
          '<timestamp1>': None,
          '<timestamp2>': None,
      }, date(2004, 2, 1), date(2015, 5, 1)),
      (date(2015, 5, 15), {
          '<form>': '101',
          '--all-dates': True,
          '<timestamp1>': '2015-03-15',
          '<timestamp2>': '2015-04-15',
      }, date(2015, 3, 1), date(2015, 4, 1)),
  ])
  def test_get_date_endpoints(mocker, today, args, start_date, end_date):
        fixture 'mocker' not found
        available fixtures: capsys, tmpdir, record_xml_property, tempdir, use_test_settings, monkeypatch, capfd, tmpdir_factory, recwarn, cache, pytestconfig, cov
        use 'py.test --fixtures [testpath]' for help on them.

D:\git\cbr-db\tests\test_cli_dates.py:90
 ERROR at setup of test_get_date_endpoints[today1-args1-start_date1-end_date1] 
file D:\git\cbr-db\tests\test_cli_dates.py, line 90
  @pytest.mark.parametrize('today,args,start_date,end_date', [
      (date(2015, 5, 15), {
          '<form>': '101',
          '--all-dates': True,
          '<timestamp1>': None,
          '<timestamp2>': None,
      }, date(2004, 2, 1), date(2015, 5, 1)),
      (date(2015, 5, 15), {
          '<form>': '101',
          '--all-dates': True,
          '<timestamp1>': '2015-03-15',
          '<timestamp2>': '2015-04-15',
      }, date(2015, 3, 1), date(2015, 4, 1)),
  ])
  def test_get_date_endpoints(mocker, today, args, start_date, end_date):
        fixture 'mocker' not found
        available fixtures: capsys, tmpdir, record_xml_property, tempdir, use_test_settings, monkeypatch, capfd, tmpdir_factory, recwarn, cache, pytestconfig, cov
        use 'py.test --fixtures [testpath]' for help on them.

D:\git\cbr-db\tests\test_cli_dates.py:90
_____________________ ERROR at setup of test_dbf2csv[101] _____________________
file D:\git\cbr-db\tests\test_commands.py, line 10
  @pytest.mark.parametrize('form', ['101'])
  def test_dbf2csv(mocker, tempdir, form):
        fixture 'mocker' not found
        available fixtures: capsys, tmpdir, record_xml_property, tempdir, use_test_settings, monkeypatch, capfd, tmpdir_factory, recwarn, cache, pytestconfig, cov
        use 'py.test --fixtures [testpath]' for help on them.

D:\git\cbr-db\tests\test_commands.py:10
______________________ ERROR at setup of test_mysqldump _______________________
file D:\git\cbr-db\tests\test_database.py, line 9
  def test_mysqldump(mocker, tempdir):
        fixture 'mocker' not found
        available fixtures: capsys, tmpdir, record_xml_property, tempdir, use_test_settings, monkeypatch, capfd, tmpdir_factory, recwarn, cache, pytestconfig, cov
        use 'py.test --fixtures [testpath]' for help on them.

D:\git\cbr-db\tests\test_database.py:9
__________________ ERROR at setup of test_get_last_modified ___________________
file D:\git\cbr-db\tests\test_download.py, line 8
  def test_get_last_modified(mocker):
        fixture 'mocker' not found
        available fixtures: capsys, tmpdir, record_xml_property, tempdir, use_test_settings, monkeypatch, capfd, tmpdir_factory, recwarn, cache, pytestconfig, cov
        use 'py.test --fixtures [testpath]' for help on them.

D:\git\cbr-db\tests\test_download.py:8
_______________________ ERROR at setup of test_download _______________________
file D:\git\cbr-db\tests\test_download.py, line 15
  def test_download(mocker, tempdir):
        fixture 'mocker' not found
        available fixtures: capsys, tmpdir, record_xml_property, tempdir, use_test_settings, monkeypatch, capfd, tmpdir_factory, recwarn, cache, pytestconfig, cov
        use 'py.test --fixtures [testpath]' for help on them.

D:\git\cbr-db\tests\test_download.py:15
______________ ERROR at setup of test_get_local_ziprar_filepath _______________
file D:\git\cbr-db\tests\test_unpack.py, line 11
  def test_get_local_ziprar_filepath(mocker):
        fixture 'mocker' not found
        available fixtures: capsys, tmpdir, record_xml_property, tempdir, use_test_settings, monkeypatch, capfd, tmpdir_factory, recwarn, cache, pytestconfig, cov
        use 'py.test --fixtures [testpath]' for help on them.

D:\git\cbr-db\tests\test_unpack.py:11
__________ ERROR at setup of test_unpack_path[101-20051201.zip-101] ___________
file D:\git\cbr-db\tests\test_unpack.py, line 21
  @pytest.mark.parametrize('filename,form', [
      ('101-20051201.zip', '101'),
      ('101-20151201.rar', '101')
  ])
  def test_unpack_path(mocker, tempdir, filename, form):
        fixture 'mocker' not found
        available fixtures: capsys, tmpdir, record_xml_property, tempdir, use_test_settings, monkeypatch, capfd, tmpdir_factory, recwarn, cache, pytestconfig, cov
        use 'py.test --fixtures [testpath]' for help on them.

D:\git\cbr-db\tests\test_unpack.py:21
__________ ERROR at setup of test_unpack_path[101-20151201.rar-101] ___________
file D:\git\cbr-db\tests\test_unpack.py, line 21
  @pytest.mark.parametrize('filename,form', [
      ('101-20051201.zip', '101'),
      ('101-20151201.rar', '101')
  ])
  def test_unpack_path(mocker, tempdir, filename, form):
        fixture 'mocker' not found
        available fixtures: capsys, tmpdir, record_xml_property, tempdir, use_test_settings, monkeypatch, capfd, tmpdir_factory, recwarn, cache, pytestconfig, cov
        use 'py.test --fixtures [testpath]' for help on them.

D:\git\cbr-db\tests\test_unpack.py:21
___ ERROR at setup of test_get_last_date_in_year[101-today0-dt0-expected0] ____
file D:\git\cbr-db\tests\test_utils_dates.py, line 160
  @pytest.mark.parametrize('form,today,dt,expected', [
      # Form 101
      ('101', date(2015, 5, 15), date(2014, 1, 1), date(2014, 12, 1)),
      ('101', date(2015, 5, 15), date(2015, 1, 1), date(2015, 5, 1)),
      ('101', date(2015, 5, 15), date(2016, 1, 1), date(2015, 5, 1)),
      # Form 102 - per quarter
      ('102', date(2015, 5, 15), date(2014, 1, 1), date(2015, 1, 1)),
      ('102', date(2015, 5, 15), date(2015, 1, 1), date(2015, 4, 1)),
      ('102', date(2015, 5, 15), date(2016, 1, 1), date(2015, 4, 1)),

  ])
  def test_get_last_date_in_year(mocker, form, today, dt, expected):
        fixture 'mocker' not found
        available fixtures: capsys, tmpdir, record_xml_property, tempdir, use_test_settings, monkeypatch, capfd, tmpdir_factory, recwarn, cache, pytestconfig, cov
        use 'py.test --fixtures [testpath]' for help on them.

D:\git\cbr-db\tests\test_utils_dates.py:160
___ ERROR at setup of test_get_last_date_in_year[101-today1-dt1-expected1] ____
file D:\git\cbr-db\tests\test_utils_dates.py, line 160
  @pytest.mark.parametrize('form,today,dt,expected', [
      # Form 101
      ('101', date(2015, 5, 15), date(2014, 1, 1), date(2014, 12, 1)),
      ('101', date(2015, 5, 15), date(2015, 1, 1), date(2015, 5, 1)),
      ('101', date(2015, 5, 15), date(2016, 1, 1), date(2015, 5, 1)),
      # Form 102 - per quarter
      ('102', date(2015, 5, 15), date(2014, 1, 1), date(2015, 1, 1)),
      ('102', date(2015, 5, 15), date(2015, 1, 1), date(2015, 4, 1)),
      ('102', date(2015, 5, 15), date(2016, 1, 1), date(2015, 4, 1)),

  ])
  def test_get_last_date_in_year(mocker, form, today, dt, expected):
        fixture 'mocker' not found
        available fixtures: capsys, tmpdir, record_xml_property, tempdir, use_test_settings, monkeypatch, capfd, tmpdir_factory, recwarn, cache, pytestconfig, cov
        use 'py.test --fixtures [testpath]' for help on them.

D:\git\cbr-db\tests\test_utils_dates.py:160
___ ERROR at setup of test_get_last_date_in_year[101-today2-dt2-expected2] ____
file D:\git\cbr-db\tests\test_utils_dates.py, line 160
  @pytest.mark.parametrize('form,today,dt,expected', [
      # Form 101
      ('101', date(2015, 5, 15), date(2014, 1, 1), date(2014, 12, 1)),
      ('101', date(2015, 5, 15), date(2015, 1, 1), date(2015, 5, 1)),
      ('101', date(2015, 5, 15), date(2016, 1, 1), date(2015, 5, 1)),
      # Form 102 - per quarter
      ('102', date(2015, 5, 15), date(2014, 1, 1), date(2015, 1, 1)),
      ('102', date(2015, 5, 15), date(2015, 1, 1), date(2015, 4, 1)),
      ('102', date(2015, 5, 15), date(2016, 1, 1), date(2015, 4, 1)),

  ])
  def test_get_last_date_in_year(mocker, form, today, dt, expected):
        fixture 'mocker' not found
        available fixtures: capsys, tmpdir, record_xml_property, tempdir, use_test_settings, monkeypatch, capfd, tmpdir_factory, recwarn, cache, pytestconfig, cov
        use 'py.test --fixtures [testpath]' for help on them.

D:\git\cbr-db\tests\test_utils_dates.py:160
___ ERROR at setup of test_get_last_date_in_year[102-today3-dt3-expected3] ____
file D:\git\cbr-db\tests\test_utils_dates.py, line 160
  @pytest.mark.parametrize('form,today,dt,expected', [
      # Form 101
      ('101', date(2015, 5, 15), date(2014, 1, 1), date(2014, 12, 1)),
      ('101', date(2015, 5, 15), date(2015, 1, 1), date(2015, 5, 1)),
      ('101', date(2015, 5, 15), date(2016, 1, 1), date(2015, 5, 1)),
      # Form 102 - per quarter
      ('102', date(2015, 5, 15), date(2014, 1, 1), date(2015, 1, 1)),
      ('102', date(2015, 5, 15), date(2015, 1, 1), date(2015, 4, 1)),
      ('102', date(2015, 5, 15), date(2016, 1, 1), date(2015, 4, 1)),

  ])
  def test_get_last_date_in_year(mocker, form, today, dt, expected):
        fixture 'mocker' not found
        available fixtures: capsys, tmpdir, record_xml_property, tempdir, use_test_settings, monkeypatch, capfd, tmpdir_factory, recwarn, cache, pytestconfig, cov
        use 'py.test --fixtures [testpath]' for help on them.

D:\git\cbr-db\tests\test_utils_dates.py:160
___ ERROR at setup of test_get_last_date_in_year[102-today4-dt4-expected4] ____
file D:\git\cbr-db\tests\test_utils_dates.py, line 160
  @pytest.mark.parametrize('form,today,dt,expected', [
      # Form 101
      ('101', date(2015, 5, 15), date(2014, 1, 1), date(2014, 12, 1)),
      ('101', date(2015, 5, 15), date(2015, 1, 1), date(2015, 5, 1)),
      ('101', date(2015, 5, 15), date(2016, 1, 1), date(2015, 5, 1)),
      # Form 102 - per quarter
      ('102', date(2015, 5, 15), date(2014, 1, 1), date(2015, 1, 1)),
      ('102', date(2015, 5, 15), date(2015, 1, 1), date(2015, 4, 1)),
      ('102', date(2015, 5, 15), date(2016, 1, 1), date(2015, 4, 1)),

  ])
  def test_get_last_date_in_year(mocker, form, today, dt, expected):
        fixture 'mocker' not found
        available fixtures: capsys, tmpdir, record_xml_property, tempdir, use_test_settings, monkeypatch, capfd, tmpdir_factory, recwarn, cache, pytestconfig, cov
        use 'py.test --fixtures [testpath]' for help on them.

D:\git\cbr-db\tests\test_utils_dates.py:160
___ ERROR at setup of test_get_last_date_in_year[102-today5-dt5-expected5] ____
file D:\git\cbr-db\tests\test_utils_dates.py, line 160
  @pytest.mark.parametrize('form,today,dt,expected', [
      # Form 101
      ('101', date(2015, 5, 15), date(2014, 1, 1), date(2014, 12, 1)),
      ('101', date(2015, 5, 15), date(2015, 1, 1), date(2015, 5, 1)),
      ('101', date(2015, 5, 15), date(2016, 1, 1), date(2015, 5, 1)),
      # Form 102 - per quarter
      ('102', date(2015, 5, 15), date(2014, 1, 1), date(2015, 1, 1)),
      ('102', date(2015, 5, 15), date(2015, 1, 1), date(2015, 4, 1)),
      ('102', date(2015, 5, 15), date(2016, 1, 1), date(2015, 4, 1)),

  ])
  def test_get_last_date_in_year(mocker, form, today, dt, expected):
        fixture 'mocker' not found
        available fixtures: capsys, tmpdir, record_xml_property, tempdir, use_test_settings, monkeypatch, capfd, tmpdir_factory, recwarn, cache, pytestconfig, cov
        use 'py.test --fixtures [testpath]' for help on them.

D:\git\cbr-db\tests\test_utils_dates.py:160
================================== FAILURES ===================================
_____________________________ test_regn_list_one ______________________________

    def test_regn_list_one():
>       bankform.main("make dataset 101 2015 --regn=964".split(' '))

tests\test_select_regn.py:28: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
cbr_db\bankform.py:219: in main
    regn, regn_file, regn_all)
cbr_db\commands.py:228: in create_final_dataset_in_raw_database
    clear_table(db, "cfg_date_limit")
cbr_db\database\connection.py:56: in clear_table
    cur.execute("DELETE FROM `{}`".format(table))
C:\Users\Евгений\Anaconda3\lib\site-packages\pymysql\cursors.py:158: in execute
    result = self._query(query)
C:\Users\Евгений\Anaconda3\lib\site-packages\pymysql\cursors.py:308: in _query
    conn.query(q)
C:\Users\Евгений\Anaconda3\lib\site-packages\pymysql\connections.py:820: in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
C:\Users\Евгений\Anaconda3\lib\site-packages\pymysql\connections.py:1002: in _read_query_result
    result.read()
C:\Users\Евгений\Anaconda3\lib\site-packages\pymysql\connections.py:1285: in read
    first_packet = self.connection._read_packet()
C:\Users\Евгений\Anaconda3\lib\site-packages\pymysql\connections.py:966: in _read_packet
    packet.check_error()
C:\Users\Евгений\Anaconda3\lib\site-packages\pymysql\connections.py:394: in check_error
    err.raise_mysql_exception(self._data)
C:\Users\Евгений\Anaconda3\lib\site-packages\pymysql\err.py:120: in raise_mysql_exception
    _check_mysql_exception(errinfo)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

errinfo = (1146, '42S02', "Table 'dbf_db.cfg_date_limit' doesn't exist")

    def _check_mysql_exception(errinfo):
        errno, sqlstate, errorvalue = errinfo
        errorclass = error_map.get(errno, None)
        if errorclass:
>           raise errorclass(errno, errorvalue)
E           pymysql.err.ProgrammingError: (1146, "Table 'dbf_db.cfg_date_limit' doesn't exist")

C:\Users\Евгений\Anaconda3\lib\site-packages\pymysql\err.py:112: ProgrammingError
---------------------------- Captured stdout call -----------------------------

Date: 2015-01-01

Date: 2015-02-01

Date: 2015-03-01

Date: 2015-04-01

Date: 2015-05-01

Date: 2015-06-01

Date: 2015-07-01

Date: 2015-08-01

Date: 2015-09-01

Date: 2015-10-01

Date: 2015-11-01

Date: 2015-12-01
_____________________________ test_regn_list_many _____________________________

    def test_regn_list_many():
>       bankform.main("make dataset 101 2015 --regn=2,5,3,1".split(' '))

tests\test_select_regn.py:33: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
cbr_db\bankform.py:219: in main
    regn, regn_file, regn_all)
cbr_db\commands.py:228: in create_final_dataset_in_raw_database
    clear_table(db, "cfg_date_limit")
cbr_db\database\connection.py:56: in clear_table
    cur.execute("DELETE FROM `{}`".format(table))
C:\Users\Евгений\Anaconda3\lib\site-packages\pymysql\cursors.py:158: in execute
    result = self._query(query)
C:\Users\Евгений\Anaconda3\lib\site-packages\pymysql\cursors.py:308: in _query
    conn.query(q)
C:\Users\Евгений\Anaconda3\lib\site-packages\pymysql\connections.py:820: in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
C:\Users\Евгений\Anaconda3\lib\site-packages\pymysql\connections.py:1002: in _read_query_result
    result.read()
C:\Users\Евгений\Anaconda3\lib\site-packages\pymysql\connections.py:1285: in read
    first_packet = self.connection._read_packet()
C:\Users\Евгений\Anaconda3\lib\site-packages\pymysql\connections.py:966: in _read_packet
    packet.check_error()
C:\Users\Евгений\Anaconda3\lib\site-packages\pymysql\connections.py:394: in check_error
    err.raise_mysql_exception(self._data)
C:\Users\Евгений\Anaconda3\lib\site-packages\pymysql\err.py:120: in raise_mysql_exception
    _check_mysql_exception(errinfo)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

errinfo = (1146, '42S02', "Table 'dbf_db.cfg_date_limit' doesn't exist")

    def _check_mysql_exception(errinfo):
        errno, sqlstate, errorvalue = errinfo
        errorclass = error_map.get(errno, None)
        if errorclass:
>           raise errorclass(errno, errorvalue)
E           pymysql.err.ProgrammingError: (1146, "Table 'dbf_db.cfg_date_limit' doesn't exist")

C:\Users\Евгений\Anaconda3\lib\site-packages\pymysql\err.py:112: ProgrammingError
---------------------------- Captured stdout call -----------------------------

Date: 2015-01-01

Date: 2015-02-01

Date: 2015-03-01

Date: 2015-04-01

Date: 2015-05-01

Date: 2015-06-01

Date: 2015-07-01

Date: 2015-08-01

Date: 2015-09-01

Date: 2015-10-01

Date: 2015-11-01

Date: 2015-12-01
________________________________ test_regn_all ________________________________

    def test_regn_all():
        """warning: this tests depends on the current database contents, that
        must be populated."""
>       bankform.main("make dataset 101 2015".split(' '))

tests\test_select_regn.py:40: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
cbr_db\bankform.py:219: in main
    regn, regn_file, regn_all)
cbr_db\commands.py:228: in create_final_dataset_in_raw_database
    clear_table(db, "cfg_date_limit")
cbr_db\database\connection.py:56: in clear_table
    cur.execute("DELETE FROM `{}`".format(table))
C:\Users\Евгений\Anaconda3\lib\site-packages\pymysql\cursors.py:158: in execute
    result = self._query(query)
C:\Users\Евгений\Anaconda3\lib\site-packages\pymysql\cursors.py:308: in _query
    conn.query(q)
C:\Users\Евгений\Anaconda3\lib\site-packages\pymysql\connections.py:820: in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
C:\Users\Евгений\Anaconda3\lib\site-packages\pymysql\connections.py:1002: in _read_query_result
    result.read()
C:\Users\Евгений\Anaconda3\lib\site-packages\pymysql\connections.py:1285: in read
    first_packet = self.connection._read_packet()
C:\Users\Евгений\Anaconda3\lib\site-packages\pymysql\connections.py:966: in _read_packet
    packet.check_error()
C:\Users\Евгений\Anaconda3\lib\site-packages\pymysql\connections.py:394: in check_error
    err.raise_mysql_exception(self._data)
C:\Users\Евгений\Anaconda3\lib\site-packages\pymysql\err.py:120: in raise_mysql_exception
    _check_mysql_exception(errinfo)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

errinfo = (1146, '42S02', "Table 'dbf_db.cfg_date_limit' doesn't exist")

    def _check_mysql_exception(errinfo):
        errno, sqlstate, errorvalue = errinfo
        errorclass = error_map.get(errno, None)
        if errorclass:
>           raise errorclass(errno, errorvalue)
E           pymysql.err.ProgrammingError: (1146, "Table 'dbf_db.cfg_date_limit' doesn't exist")

C:\Users\Евгений\Anaconda3\lib\site-packages\pymysql\err.py:112: ProgrammingError
---------------------------- Captured stdout call -----------------------------

Date: 2015-01-01

Date: 2015-02-01

Date: 2015-03-01

Date: 2015-04-01

Date: 2015-05-01

Date: 2015-06-01

Date: 2015-07-01

Date: 2015-08-01

Date: 2015-09-01

Date: 2015-10-01

Date: 2015-11-01

Date: 2015-12-01
_____________________________ test_regn_list_file _____________________________

cwd = 'D:\\git\\cbr-db\\tests'

    def test_regn_list_file(cwd):
        regn_file = os.path.join(cwd, 'regn.txt')
>       bankform.main(['make', 'dataset', '101', '2015', '--regn-file={}'.format(regn_file)])

test_select_regn.py:51: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
..\cbr_db\bankform.py:219: in main
    regn, regn_file, regn_all)
..\cbr_db\commands.py:228: in create_final_dataset_in_raw_database
    clear_table(db, "cfg_date_limit")
..\cbr_db\database\connection.py:56: in clear_table
    cur.execute("DELETE FROM `{}`".format(table))
C:\Users\Евгений\Anaconda3\lib\site-packages\pymysql\cursors.py:158: in execute
    result = self._query(query)
C:\Users\Евгений\Anaconda3\lib\site-packages\pymysql\cursors.py:308: in _query
    conn.query(q)
C:\Users\Евгений\Anaconda3\lib\site-packages\pymysql\connections.py:820: in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
C:\Users\Евгений\Anaconda3\lib\site-packages\pymysql\connections.py:1002: in _read_query_result
    result.read()
C:\Users\Евгений\Anaconda3\lib\site-packages\pymysql\connections.py:1285: in read
    first_packet = self.connection._read_packet()
C:\Users\Евгений\Anaconda3\lib\site-packages\pymysql\connections.py:966: in _read_packet
    packet.check_error()
C:\Users\Евгений\Anaconda3\lib\site-packages\pymysql\connections.py:394: in check_error
    err.raise_mysql_exception(self._data)
C:\Users\Евгений\Anaconda3\lib\site-packages\pymysql\err.py:120: in raise_mysql_exception
    _check_mysql_exception(errinfo)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

errinfo = (1146, '42S02', "Table 'dbf_db.cfg_date_limit' doesn't exist")

    def _check_mysql_exception(errinfo):
        errno, sqlstate, errorvalue = errinfo
        errorclass = error_map.get(errno, None)
        if errorclass:
>           raise errorclass(errno, errorvalue)
E           pymysql.err.ProgrammingError: (1146, "Table 'dbf_db.cfg_date_limit' doesn't exist")

C:\Users\Евгений\Anaconda3\lib\site-packages\pymysql\err.py:112: ProgrammingError
---------------------------- Captured stdout call -----------------------------

Date: 2015-01-01

Date: 2015-02-01

Date: 2015-03-01

Date: 2015-04-01

Date: 2015-05-01

Date: 2015-06-01

Date: 2015-07-01

Date: 2015-08-01

Date: 2015-09-01

Date: 2015-10-01

Date: 2015-11-01

Date: 2015-12-01
========== 4 failed, 29 passed, 1 skipped, 16 error in 0.90 seconds ===========
