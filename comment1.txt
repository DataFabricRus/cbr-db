TODO
====
'used in ...' docstrings in database.py not very meaningful, may go over them. better add what the function does, not whwere it is used.

there are warnings in mysqlimport of standard csv files, need to find out reason for these warnings (replicate same import with sql's "load data" then "show warnings")
EP: 
    are warnings format conversion? 
	 

DONE
====
Before 2015-06-15 05:20 PM
.gitignore - delete it
supply Excel file output, specification and previous realisation for –csv –xls keys. 

2015-06-15 05:20 PM
build xls file 
make output common directory - write .sql there
delete temp sql files in ouptput directory 
new dates interface

2015-06-16 05:24 PM
read private data to final/raw database 
    Private data is text files with same logic structure as DBF. A separate altorightm is
	used to convert these text files to csv's readable by mysqlimport. These CSVs can be 
	imported directly to raw database. text files are in data.private.rar, conversion algorithm is in veb_txt.py.
	
	Steps:
    define directories where private data text files are stored, and csv files are created
    convert text files to csv files (using veb_txt.py). 
	import csv files to raw database (import_veb.bat). import_veb.bat imports all available csv files, because it is a quick job to do. I think myslqimport call is slightly different from the one used for other csv files - please document it too.
	integrate calls into bankform.py command line interface (no dates, this will for now work on all files):
	     bankform.py make csv <FORM> --private-data [--all-dates]
         bankform.py import csv <FORM> --private-data [--all-dates]

2015-06-17 11:22 AM
update tests for cli_dates.py - see commented code in bootom of file cli_dates.py (I changed the command line interface, now several date formats can be supplied as input)
EP: made additional comments/doctrings, done

inspect date_engine.py for orphan functions, document necessary changes. what modules use functions from there?
EP: made additional comments/doctrings + code blocks, done

2015-06-17 05:44 PM
update command: bankform.py update <FORM> 
make readme.md
		 
NOT TODO
========
Critical
--------
f101 integrity check, find

check test results / full circle tests

explicit regn and date limit when truncating raw database (hardcoded in database)
    bankform.py make dataset <FORM> --regn=<regn_list> --regn-file<file> --dates 2012 2015
    bankform.py make dataset <FORM> --regn=956,1000 --regn-file regn.txt --dates 2015
	must look for regn.txt in current directory or DIRLIST['global']['tables']
	
top-30 bank test

import form 102

update readme.md

final uses of data: typical charts/forms/text comment

ccorp piece

Can live without it
-------------------
autopack/7z
audit previous versions of cbr_db
audit previous php/python implementations
python bankform.py reset database 
write to existing file openpyxl
add --alldates key in commandline interface 
read from DBF to final database directly
‘Import tables’ is not very clean, it is actually about importing names/plan from files
5 bank balance output 
sql outputs to screen
   -v for verbose
   date formats
timer
sqla abstraction/sql optimisation

More
----
Examples, not tests
Join conn.py anmd download?

COMMENT
=======
bottle framework to put to localhost/web 
something to start mysql server/daemon (now manually in Windows)
pandas dataframe - more explicit data aggregation algorithm 
SQLA abstraction of SQL queries